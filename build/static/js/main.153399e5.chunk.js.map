{"version":3,"sources":["index.js"],"names":["onSubmit","values","a","window","alert","JSON","stringify","console","log","fetch","method","headers","body","name","firstName","email","message","then","response","validate","errors","lastName","App","style","padding","margin","maxWidth","variant","align","component","gutterBottom","render","handleSubmit","submitting","noValidate","container","alignItems","spacing","item","xs","fullWidth","required","TextField","type","label","marginTop","color","disabled","ReactDOM","document","querySelector"],"mappings":"mRAYMA,EAAQ,uCAAG,WAAOC,GAAP,SAAAC,EAAA,sDAGfC,OAAOC,MAAMC,KAAKC,UAAUL,EAAQ,EAAG,IAEvCM,QAAQC,IAAIP,GAEV,0FAEFQ,MAFE,0FAEa,CACbC,OAAQ,OACRC,QAAS,CACP,eAAgB,mBAChB,+BAA+B,GAEjCC,KAAMP,KAAKC,UAAU,CACnBO,KAAMZ,EAAOa,UACbC,MAAOd,EAAOc,MACdC,QAASf,EAAOe,YAEjBC,MAAK,SAAUC,GAChBX,QAAQC,IAAIU,MArBC,2CAAH,sDAyBRC,EAAW,SAAClB,GAChB,IAAMmB,EAAS,GAaf,OAZKnB,EAAOa,YACVM,EAAON,UAAY,YAEhBb,EAAOoB,WACVD,EAAOC,SAAW,YAEfpB,EAAOc,QACVK,EAAOL,MAAQ,YAEZd,EAAOe,UACVI,EAAOJ,QAAU,YAEZI,GAGT,SAASE,IACP,OACE,yBAAKC,MAAO,CAAEC,QAAS,GAAIC,OAAQ,OAAQC,SAAU,MACnD,kBAAC,IAAD,MACA,kBAAC,IAAD,CAAYC,QAAQ,KAAKC,MAAM,SAASC,UAAU,KAAKC,cAAY,GAAnE,qBAGA,kBAAC,IAAD,CACE9B,SAAUA,EACVmB,SAAUA,EACVY,OAAQ,gBAAGC,EAAH,EAAGA,aAAcC,EAAjB,EAAiBA,WAAjB,OACN,0BAAMjC,SAAUgC,EAAcE,YAAU,GACtC,kBAAC,IAAD,CAAOX,MAAO,CAAEC,QAAS,KACvB,kBAAC,IAAD,CAAMW,WAAS,EAACC,WAAW,aAAaC,QAAS,GAC/C,kBAAC,IAAD,CAAMC,MAAI,EAACC,GAAI,GACb,kBAAC,IAAD,CACEC,WAAS,EACTC,UAAQ,EACR5B,KAAK,YACLgB,UAAWa,YACXC,KAAK,OACLC,MAAM,gBAGV,kBAAC,IAAD,CAAMN,MAAI,EAACC,GAAI,GACb,kBAAC,IAAD,CACEC,WAAS,EACTC,UAAQ,EACR5B,KAAK,WACLgB,UAAWa,YACXC,KAAK,OACLC,MAAM,eAGV,kBAAC,IAAD,CAAMN,MAAI,EAACC,GAAI,IACb,kBAAC,IAAD,CACE1B,KAAK,QACL2B,WAAS,EACTC,UAAQ,EACRZ,UAAWa,YACXC,KAAK,QACLC,MAAM,WAGV,kBAAC,IAAD,CAAMN,MAAI,EAACC,GAAI,IACb,kBAAC,IAAD,CACE1B,KAAK,UACL2B,WAAS,EACTC,UAAQ,EACRZ,UAAWa,YACXC,KAAK,OACLC,MAAM,aAIV,kBAAC,IAAD,CAAMN,MAAI,EAACf,MAAO,CAAEsB,UAAW,KAC7B,kBAAC,IAAD,CACElB,QAAQ,YACRmB,MAAM,UACNH,KAAK,SACLI,SAAUd,GAJZ,kBAkBlBe,IAASjB,OAAO,kBAACT,EAAD,MAAS2B,SAASC,cAAc,Y","file":"static/js/main.153399e5.chunk.js","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Form, Field } from \"react-final-form\";\nimport { TextField } from \"final-form-material-ui\";\nimport {\n  Typography,\n  Paper,\n  Grid,\n  Button,\n  CssBaseline,\n} from \"@material-ui/core\";\n\nconst onSubmit = async (values) => {\n  //const sleep = (ms) => new Promise((resolve) => setTimeout(resolve, ms));\n  //await sleep(300);\n  window.alert(JSON.stringify(values, 0, 3));\n  //const axios = require(\"axios\");\n  console.log(values);\n  const API_URL =\n    \"https://bzsx72vxd1.execute-api.us-east-1.amazonaws.com/default/sendEmailMessageFunction\";\n\n  fetch(API_URL, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      \"Access-Control-Allow-Origin\": true,\n    },\n    body: JSON.stringify({\n      name: values.firstName,\n      email: values.email,\n      message: values.message,\n    }),\n  }).then(function (response) {\n    console.log(response);\n  });\n};\n\nconst validate = (values) => {\n  const errors = {};\n  if (!values.firstName) {\n    errors.firstName = \"Required\";\n  }\n  if (!values.lastName) {\n    errors.lastName = \"Required\";\n  }\n  if (!values.email) {\n    errors.email = \"Required\";\n  }\n  if (!values.message) {\n    errors.message = \"Required\";\n  }\n  return errors;\n};\n\nfunction App() {\n  return (\n    <div style={{ padding: 16, margin: \"auto\", maxWidth: 600 }}>\n      <CssBaseline />\n      <Typography variant=\"h4\" align=\"center\" component=\"h1\" gutterBottom>\n        MK Challenge Form\n      </Typography>\n      <Form\n        onSubmit={onSubmit}\n        validate={validate}\n        render={({ handleSubmit, submitting }) => (\n          <form onSubmit={handleSubmit} noValidate>\n            <Paper style={{ padding: 16 }}>\n              <Grid container alignItems=\"flex-start\" spacing={2}>\n                <Grid item xs={6}>\n                  <Field\n                    fullWidth\n                    required\n                    name=\"firstName\"\n                    component={TextField}\n                    type=\"text\"\n                    label=\"First Name\"\n                  />\n                </Grid>\n                <Grid item xs={6}>\n                  <Field\n                    fullWidth\n                    required\n                    name=\"lastName\"\n                    component={TextField}\n                    type=\"text\"\n                    label=\"Last Name\"\n                  />\n                </Grid>\n                <Grid item xs={12}>\n                  <Field\n                    name=\"email\"\n                    fullWidth\n                    required\n                    component={TextField}\n                    type=\"email\"\n                    label=\"Email\"\n                  />\n                </Grid>\n                <Grid item xs={12}>\n                  <Field\n                    name=\"message\"\n                    fullWidth\n                    required\n                    component={TextField}\n                    type=\"text\"\n                    label=\"Message\"\n                  />\n                </Grid>\n\n                <Grid item style={{ marginTop: 16 }}>\n                  <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    type=\"submit\"\n                    disabled={submitting}\n                  >\n                    Submit\n                  </Button>\n                </Grid>\n              </Grid>\n            </Paper>\n          </form>\n        )}\n      />\n    </div>\n  );\n}\n\nReactDOM.render(<App />, document.querySelector(\"#root\"));\n"],"sourceRoot":""}